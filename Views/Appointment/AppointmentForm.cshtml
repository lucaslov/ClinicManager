@model ClinicManager.ViewModels.AppointmentFormViewModel
@{
    ViewBag.Title = "AppointmentForm";
}
@Styles.Render("~/bundles/dtpickerstyles")
<h2>AppointmentForm</h2>
@using (Html.BeginForm("Save", "Appointment"))
{
    if (Model.Appointment != null)
    {
        @Html.HiddenFor(a => a.Appointment.Id)
    }
    @Html.ValidationSummary()
    <div class="form-group">
        @Html.LabelFor(a => a.Appointment.Date)
        @Html.TextBoxFor(a => a.Appointment.Date,
        new { @class = "form-control datetimepicker", autocomplete="off" })
        @Html.ValidationMessageFor(a => a.Appointment.Date)
    </div>
    <div class="form-group">
        @Html.LabelFor(a => a.Appointment.Description)
        @Html.TextBoxFor(a => a.Appointment.Description, new { @class = "form-control" })
        @Html.ValidationMessageFor(a => a.Appointment.Description)

    </div>
    <div class="form-group">
        @Html.LabelFor(a => a.Appointment.DoctorId)
        @Html.DropDownListFor(a => a.Appointment.DoctorId,
        new SelectList(Model.Doctors, "Id", "FullName"),
        "Select Doctor", new { @class = "form-control" })
        @Html.ValidationMessageFor(a => a.Appointment.DoctorId)

    </div>
    <div class="form-group">
        @Html.LabelFor(a => a.Appointment.PatientId)
        @Html.DropDownListFor(a => a.Appointment.PatientId,
        new SelectList(Model.Patients, "Id", "FullName"),
        "Select Patient", new { @class = "form-control" })
        @Html.ValidationMessageFor(a => a.Appointment.PatientId)

    </div>
    @Html.AntiForgeryToken()

    <button type="submit" class="btn btn-danger">Save</button>
}

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/dtpickerjquery")
<script>
    $(document).ready(function () {
        var thisYear = new Date().getFullYear();
        var twoYearsFromNow = new Date(new Date().setFullYear(new Date().getFullYear() + 2));
        $(".datetimepicker").datetimepicker({
            theme: 'dark',
            minDate: 0,
            maxDate: twoYearsFromNow,
            minTime: '7:00',
            maxTime: '19:01',
            yearStart: thisYear,
            yearEnd: twoYearsFromNow.getFullYear(),
            disabledWeekDays: [0,6] //weekends
        });
    });
    </script>
}

